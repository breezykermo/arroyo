version: '3.8'

services:
  postgres:
    network_mode: host
    image: postgres:latest
    environment:
      POSTGRES_DB: arroyo
      POSTGRES_USER: arroyo
      POSTGRES_PASSWORD: arroyo
    command: ["postgres", "-c", "listen_addresses=*"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U arroyo -d arroyo -h localhost -p 5432"]
      interval: 10s
      retries: 5

  postgres-migrations:
    network_mode: host
    build:
      context: .
      dockerfile: docker/dev/refinery.Dockerfile
    volumes:
      - ./arroyo-api/migrations:/tmp/migrations
    depends_on:
      postgres:
        condition: service_healthy
    command: ["refinery", "migrate", "-c", "/tmp/refinery.toml", "-p", "/tmp/migrations"]

  arroyo-controller:
    network_mode: host
    build:
      context: .
      dockerfile: ./docker/dev/main.Dockerfile 
    working_dir: /home/src
    depends_on:
      - arroyo-compiler-service
    environment:
      - REMOTE_COMPILER_ENDPOINT=http://localhost:9000
    volumes:
      - ./:/home/src
      - cargo-cache:/home/src/.cargo
    command: ["cargo", "run", "--bin", "arroyo-controller"]
    profiles:
      - donotstart

  arroyo-api:
    network_mode: host
    build:
      context: .
      dockerfile: ./docker/dev/main.Dockerfile 
    working_dir: /home/src
    depends_on:
      - arroyo-compiler-service
    volumes:
      - ./:/home/src
      - cargo-cache:/home/src/.cargo
    command: ["cargo", "run", "--bin", "arroyo-api"]
    profiles:
      - donotstart

  arroyo-compiler-service:
    network_mode: host
    build:
      context: .
      dockerfile: ./docker/dev/main.Dockerfile 
    working_dir: /home/src
    environment:
      - ARTIFACT_URL=file://home/artifacts
    volumes:
      - ./:/home/src
      - cargo-cache:/home/src/.cargo
    command: ["cargo", "run", "--bin", "arroyo-compiler-service", "--", "start"]
    profiles:
      - donotstart
    # TODO create a healthcheck so that both arroyo-api and arroyo-controller can get out of the way


  # frontend:
  #   network_mode: host

volumes:
  cargo-cache:
